{:paths ["src/clj" "resources" "target/classes"]

 :deps
 {org.clojure/clojure            {:mvn/version "1.11.0-beta1"}
  org.clojure/core.async         {:mvn/version "1.3.610"}
  org.clojure/core.cache         {:mvn/version "1.0.217"}
  org.clojure/data.priority-map  {:mvn/version "1.0.0"}
  org.clojure/data.xml           {:mvn/version "0.0.8"}
  it.unimi.dsi/dsiutils          {:mvn/version "2.6.17"}
  it.unimi.dsi/fastutil          {:mvn/version "8.5.4"}

  ;; url normalization
  lambdaisland/uri       {:mvn/version "1.4.54"}

  ;; serialization
  com.taoensso/nippy             {:mvn/version "3.1.1"}
  com.rpl/nippy-serializable-fns {:mvn/version "0.4.1"}

  ;; logging
  io.pedestal/pedestal.log       {:mvn/version "0.5.7"}
  ch.qos.logback/logback-classic {:mvn/version "1.2.3"}

  ;; resource fetching
  http-kit/http-kit {:mvn/version "2.6.0-alpha1"}

  ;; html parsing
  net.htmlparser.jericho/jericho-html {:mvn/version "3.4"}

  ;; in test-mode for parsing different stuff
  com.novemberain/pantomime {:mvn/version "2.11.0"}}

 :aliases
 {:dev
  {:extra-paths ["dev"]
   :extra-deps  {com.clojure-goes-fast/clj-async-profiler {:mvn/version "0.5.1"}
                 criterium/criterium                      {:mvn/version "0.4.6"}
                 org.clojure/data.json                    {:mvn/version "2.4.0"}
                 org.clojure/tools.namespace              {:mvn/version "1.1.0"}
                 vvvvalvalval/scope-capture               {:mvn/version "0.3.2"}
                 fiv0/kusonga                             {:mvn/version "0.1.2"}
                 com.lambdaisland/classpath               {:mvn/version "0.0.27"}

                 ;; testing other http clients
                 clj-http/clj-http            {:mvn/version "3.12.3"}
                 aleph/aleph                  {:mvn/version "0.4.6" }
                 org.clj-commons/byte-streams {:mvn/version "0.2.10"}
                 manifold/manifold            {:mvn/version "0.1.9"}}
   :jvm-opts ["-Dclojure.core.async.pool-size=32"
              "-Djdk.attach.allowAttachSelf"
              "-XX:+UnlockDiagnosticVMOptions"
              "-XX:+DebugNonSafepoints"
              "-Xmx20g"]}

  :test
  {:extra-paths ["test"]
   :extra-deps  {nubank/matcher-combinators           {:mvn/version "3.3.1"}
                 io.github.cognitect-labs/test-runner {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
   :exec-fn cognitect.test-runner.api/test
   :jvm-opts ["-Dgraal.LogFile=test.log"]}

  :build {:extra-deps {io.github.clojure/tools.build {:git/tag "v0.5.1"
                                                      :git/sha "21da7d4"
                                                      :exclusions [org.slf4j/slf4j-nop]}}
          :ns-default build}}

 :mvn/repos
 {"central"        {:url "https://repo1.maven.org/maven2/"}
  "clojars"        {:url "https://clojars.org/repo"}}}
